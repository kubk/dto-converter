// THE FILE WAS AUTOGENERATED USING PHP-CONVERTER. PLEASE DO NOT EDIT IT!

import axios from 'axios';

export type AdminZoneChatCreateInput = {
  id: string;
  isAdmin: boolean;
};

export type AdminZoneChatOutput = {
  id: string;
  isAdmin: boolean;
};

export type AdminZoneChatUpdateInput = {
};

export type ChatMessageWithAttachmentsOutput = {
};

export type ChatOutput = {
  id: string;
};

export type CloudPushStoreOutput = {
};

export type StudentNotesInput = {
};

export type StudentNotesOutput = {
  id: string;
};

export type StudentNotesUpdateInput = {
};

export const apiChatsGet = (filters: any | null = null): Promise<CollectionResponse<ChatOutput>> => {
  return axios
    .get<CollectionResponse<ChatOutput>>(`/api/chats`, { params: filters })
    .then((response) => response.data);
}

export const apiChatsIdGet = (id: string): Promise<ChatOutput> => {
  return axios
    .get<ChatOutput>(`/api/chats/${id}`)
    .then((response) => response.data);
}

export const apiChatsIdMarkAsReadPut = (id: string): Promise<ChatOutput> => {
  return axios
    .put<ChatOutput>(`/api/chats/${id}/mark_as_read`)
    .then((response) => response.data);
}

export const apiChatsIdMessagesWithAttachmentsGet = (id: string): Promise<ChatMessageWithAttachmentsOutput> => {
  return axios
    .get<ChatMessageWithAttachmentsOutput>(`/api/chats/${id}/messages_with_attachments`)
    .then((response) => response.data);
}

export const apiChatsIdMutePut = (id: string): Promise<ChatOutput> => {
  return axios
    .put<ChatOutput>(`/api/chats/${id}/mute`)
    .then((response) => response.data);
}

export const apiChatsAdminZoneGet = (filters: any | null = null): Promise<CollectionResponse<AdminZoneChatOutput>> => {
  return axios
    .get<CollectionResponse<AdminZoneChatOutput>>(`/api/chats_admin_zone`, { params: filters })
    .then((response) => response.data);
}

export const apiChatsAdminZonePost = (body: AdminZoneChatCreateInput): Promise<AdminZoneChatOutput> => {
  return axios
    .post<AdminZoneChatOutput>(`/api/chats_admin_zone`, body)
    .then((response) => response.data);
}

export const apiChatsAdminZoneIdPut = (id: string, body: AdminZoneChatUpdateInput): Promise<AdminZoneChatOutput> => {
  return axios
    .put<AdminZoneChatOutput>(`/api/chats_admin_zone/${id}`, body)
    .then((response) => response.data);
}

export const apiChatsAdminZoneIdGet = (id: string): Promise<AdminZoneChatOutput> => {
  return axios
    .get<AdminZoneChatOutput>(`/api/chats_admin_zone/${id}`)
    .then((response) => response.data);
}

export const apiPushHistoryItemsIdGet = (id: string): Promise<CloudPushStoreOutput> => {
  return axios
    .get<CloudPushStoreOutput>(`/api/push_history_items/${id}`)
    .then((response) => response.data);
}

export const apiStudentNotesGet = (filters: any | null = null): Promise<CollectionResponse<StudentNotesOutput>> => {
  return axios
    .get<CollectionResponse<StudentNotesOutput>>(`/api/student_notes`, { params: filters })
    .then((response) => response.data);
}

export const apiStudentNotesPost = (body: StudentNotesInput): Promise<StudentNotesOutput> => {
  return axios
    .post<StudentNotesOutput>(`/api/student_notes`, body)
    .then((response) => response.data);
}

export const apiStudentNotesIdGet = (id: string): Promise<StudentNotesOutput> => {
  return axios
    .get<StudentNotesOutput>(`/api/student_notes/${id}`)
    .then((response) => response.data);
}

export const apiStudentNotesIdPut = (id: string, body: StudentNotesUpdateInput): Promise<StudentNotesOutput> => {
  return axios
    .put<StudentNotesOutput>(`/api/student_notes/${id}`, body)
    .then((response) => response.data);
}

export type CollectionResponse<Resource extends {id: string}> = {
  'hydra:member': Resource[];
  'hydra:totalItems': number;
  'hydra:view': { '@id': string; 'hydra:last': string };
  'hydra:search': { 'hydra:mapping': any[] };
  'hydra:last': string;
};